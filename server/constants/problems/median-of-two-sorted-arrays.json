{
    "main": {
        "id": 2,
        "name": "median-of-two-sorted-arrays",
        "difficulty": "easy",
        "like_count": 189,
        "dislike_count": 42,
        "description_body": "Given two sorted arrays `nums1` and `nums2` of size `m` and `n` respectively, return the median of the two sorted arrays.\n\nThe overall run time complexity should be `O(log (m+n))`.\n\n**Example 1:**\n\n```\nInput: nums1 = [1,3], nums2 = [2]\nOutput: 2.00000\nExplanation: merged array = [1,2,3] and median is 2.\n```\n\n**Example 2:**\n\n```\nInput: nums1 = [1,2], nums2 = [3,4]\nOutput: 2.50000\nExplanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.\n```\n\n**Constraints:**\n\n-   `nums1.length == m`\n-   `nums2.length == n`\n-   `0 <= m <= 1000`\n-   `0 <= n <= 1000`\n-   `1 <= m + n <= 2000`\n-   `-106 <= nums1[i], nums2[i] <= 106`",
        "accept_count": 42,
        "submission_count": 2000,
        "acceptance_rate_count": 50,
        "discussion_count": 4000,
        "related_topics": ["Three Sum"],
        "similar_questions": ["Three Sum"],
        "solution_count": 222,
        "code_default_language": "javascript",
        "code_body": {
            "javascript": "/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number}\n */\nvar findMedianSortedArrays = function(nums1, nums2) {\n    \n};"
        }
    },
    "editorial": {
        "editorial_body": ""
    },
    "test": [
        [[1, 3], [2], 2.0],
        [[1, 2], [3, 4], 2.5]
    ],
    "function_name": "findMedianSortedArrays"
}
