{
    "main": {
        "id": 3,
        "name": "reverse-integer",
        "difficulty": "medium",
        "like_count": 1289,
        "dislike_count": 2289,
        "description_body": "Given a signed 32-bit integer `x`, return `x` with its digits reversed. If reversing `x` causes the value to go outside the signed 32-bit integer range `[-231, 231 - 1]`, then return `0`.\n\n**Assume the environment does not allow you to store 64-bit integers (signed or unsigned).**\n\n**Example 1:**\n\n```\nInput: x = 123\nOutput: 321\n```\n\n**Example 2:**\n\n```\nInput: x = -123\nOutput: -321\n```\n\n**Example 3:**\n\n```\nInput: x = 120\nOutput: 21\n```\n\n**Constraints:**\n\n-   `-231 <= x <= 231 - 1`",
        "accept_count": 42,
        "submission_count": 2000,
        "acceptance_rate_count": 27,
        "discussion_count": 4000,
        "related_topics": [""],
        "similar_questions": [""],
        "solution_count": 382,
        "code_default_language": "javascript",
        "code_body": {
            "javascript": "/**\n * @param {number} x\n * @return {number}\n */\nvar reverse = function(x) {\n    \n};"
        }
    },
    "editorial": {
        "editorial_body": ""
    },
    "test": [
        [123 , 321],
        [-123, -321],
        [120, 21]
    ],
    "function_name": "reverse"
}
